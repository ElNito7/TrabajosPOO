/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


/**
 *
 * @author Keloc
 */
import funcionalidades.TDA.NodoSE;
import funcionalidades.TDA.ListaSE;
import funcionalidades.Solicitud;
import funcionalidades.Retiro;
import funcionalidades.Nacional;
import funcionalidades.Extranjero;
import funcionalidades.Deposito;
import funcionalidades.Cuenta;
import funcionalidades.Cliente;
import funcionalidades.Banco;
import javax.swing.JOptionPane;
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    Banco banco;
    public Interfaz(Banco banco) {
        initComponents();
        this.banco = banco;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRetiroN = new javax.swing.JPanel();
        nombreL = new javax.swing.JLabel();
        apellidosL = new javax.swing.JLabel();
        idL = new javax.swing.JLabel();
        sexoL = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        idCliente = new javax.swing.JTextField();
        sexo = new javax.swing.JTextField();
        retiroL = new javax.swing.JLabel();
        retiro = new javax.swing.JTextField();
        idCuentaL = new javax.swing.JLabel();
        idCuenta = new javax.swing.JTextField();
        panelRetiroE = new javax.swing.JPanel();
        idCuentaL1 = new javax.swing.JLabel();
        nombreL1 = new javax.swing.JLabel();
        idCuentaE = new javax.swing.JTextField();
        apellidosL1 = new javax.swing.JLabel();
        idL1 = new javax.swing.JLabel();
        sexoL1 = new javax.swing.JLabel();
        nombreE = new javax.swing.JTextField();
        apellidosE = new javax.swing.JTextField();
        idClienteE = new javax.swing.JTextField();
        sexoE = new javax.swing.JTextField();
        retiroL1 = new javax.swing.JLabel();
        retiroE = new javax.swing.JTextField();
        nacionalidadL = new javax.swing.JLabel();
        direccionL = new javax.swing.JLabel();
        nacionalidad = new javax.swing.JTextField();
        direccion = new javax.swing.JTextField();
        panelDivisas = new javax.swing.JPanel();
        divisasL = new javax.swing.JLabel();
        cuentaL = new javax.swing.JLabel();
        divisas = new javax.swing.JTextField();
        idCuentaDivisas = new javax.swing.JTextField();
        nameDivL = new javax.swing.JLabel();
        nameDivTF = new javax.swing.JTextField();
        addingClienteP = new javax.swing.JPanel();
        clienteApellidosL = new javax.swing.JLabel();
        clienteNomL = new javax.swing.JLabel();
        clienteIDL = new javax.swing.JLabel();
        clienteSexoL = new javax.swing.JLabel();
        clienteNomTF = new javax.swing.JTextField();
        clienteIDTF = new javax.swing.JTextField();
        clienteApellidosTF = new javax.swing.JTextField();
        sexoComboBox = new javax.swing.JComboBox<>();
        depositoPanel = new javax.swing.JPanel();
        dineroDepL = new javax.swing.JLabel();
        idCuentaDepL = new javax.swing.JLabel();
        idCuentaDep = new javax.swing.JTextField();
        dineroDeposito = new javax.swing.JTextField();
        nameL = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        addingClienteEP = new javax.swing.JPanel();
        clienteApellidosL1 = new javax.swing.JLabel();
        clienteNomL1 = new javax.swing.JLabel();
        clienteIDL1 = new javax.swing.JLabel();
        clienteSexoL1 = new javax.swing.JLabel();
        clienteNomETF = new javax.swing.JTextField();
        clienteIDETF = new javax.swing.JTextField();
        clienteApellidosETF = new javax.swing.JTextField();
        sexoComboBoxE = new javax.swing.JComboBox<>();
        nacL = new javax.swing.JLabel();
        direccionACEL = new javax.swing.JLabel();
        nacionalidadTF = new javax.swing.JTextField();
        direccionTF = new javax.swing.JTextField();
        panelDivisasR = new javax.swing.JPanel();
        divisasL1 = new javax.swing.JLabel();
        cuentaL1 = new javax.swing.JLabel();
        divisasR = new javax.swing.JTextField();
        idCuentaDivisasR = new javax.swing.JTextField();
        nameDivL1 = new javax.swing.JLabel();
        nameDivTFR = new javax.swing.JTextField();
        bg = new javax.swing.JPanel();
        menu = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        title = new javax.swing.JPanel();
        mostrarCuentas = new javax.swing.JButton();
        mostrarSol = new javax.swing.JButton();
        atenderSol = new javax.swing.JButton();
        bajaMillos = new javax.swing.JButton();
        addCuenta = new javax.swing.JButton();
        borrarCuenta = new javax.swing.JButton();
        retirarBoton = new javax.swing.JButton();
        divisasBoton = new javax.swing.JButton();
        mostrarClientesBoton = new javax.swing.JButton();
        depositoBoton = new javax.swing.JButton();
        imgL1 = new javax.swing.JLabel();
        imgL2 = new javax.swing.JLabel();
        imgL3 = new javax.swing.JLabel();
        imgL4 = new javax.swing.JLabel();
        imgL5 = new javax.swing.JLabel();
        imgL6 = new javax.swing.JLabel();
        imgL7 = new javax.swing.JLabel();
        imgL8 = new javax.swing.JLabel();
        imgL9 = new javax.swing.JLabel();
        imgL10 = new javax.swing.JLabel();

        nombreL.setText("Nombre:");

        apellidosL.setText("Apellidos:");

        idL.setText("Num. de ID:");

        sexoL.setText("Sexo:");

        retiroL.setText("Cant. de Retiro");

        idCuentaL.setText("ID de Cuenta:");

        javax.swing.GroupLayout panelRetiroNLayout = new javax.swing.GroupLayout(panelRetiroN);
        panelRetiroN.setLayout(panelRetiroNLayout);
        panelRetiroNLayout.setHorizontalGroup(
            panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRetiroNLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRetiroNLayout.createSequentialGroup()
                        .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(retiroL)
                            .addComponent(idCuentaL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retiro, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelRetiroNLayout.createSequentialGroup()
                        .addComponent(nombreL)
                        .addGap(18, 18, 18)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroNLayout.createSequentialGroup()
                        .addComponent(apellidosL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroNLayout.createSequentialGroup()
                        .addComponent(idL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroNLayout.createSequentialGroup()
                        .addComponent(sexoL)
                        .addGap(37, 37, 37)
                        .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        panelRetiroNLayout.setVerticalGroup(
            panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRetiroNLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreL)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidosL)
                    .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idL)
                    .addComponent(idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sexoL)
                    .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retiroL)
                    .addComponent(retiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRetiroNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idCuentaL)
                    .addComponent(idCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        idCuentaL1.setText("ID de Cuenta:");

        nombreL1.setText("Nombre:");

        apellidosL1.setText("Apellidos:");

        idL1.setText("Num. de ID:");

        sexoL1.setText("Sexo:");

        retiroL1.setText("Cant. de Retiro");

        nacionalidadL.setText("Nacionalidad:");

        direccionL.setText("Direccion:");

        javax.swing.GroupLayout panelRetiroELayout = new javax.swing.GroupLayout(panelRetiroE);
        panelRetiroE.setLayout(panelRetiroELayout);
        panelRetiroELayout.setHorizontalGroup(
            panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRetiroELayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(retiroL1)
                            .addComponent(idCuentaL1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCuentaE, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retiroE, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addComponent(nombreL1)
                        .addGap(18, 18, 18)
                        .addComponent(nombreE, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addComponent(apellidosL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(apellidosE, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addComponent(idL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idClienteE, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addComponent(sexoL1)
                        .addGap(37, 37, 37)
                        .addComponent(sexoE, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addComponent(nacionalidadL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nacionalidad))
                    .addGroup(panelRetiroELayout.createSequentialGroup()
                        .addComponent(direccionL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(direccion)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        panelRetiroELayout.setVerticalGroup(
            panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRetiroELayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreL1)
                    .addComponent(nombreE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidosL1)
                    .addComponent(apellidosE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idL1)
                    .addComponent(idClienteE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sexoL1)
                    .addComponent(sexoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nacionalidadL)
                    .addComponent(nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionL)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retiroL1)
                    .addComponent(retiroE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRetiroELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idCuentaL1)
                    .addComponent(idCuentaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        divisasL.setText("Cantidad de Divisas:");

        cuentaL.setText("ID de Cuenta:");

        nameDivL.setText("Nombre:");

        javax.swing.GroupLayout panelDivisasLayout = new javax.swing.GroupLayout(panelDivisas);
        panelDivisas.setLayout(panelDivisasLayout);
        panelDivisasLayout.setHorizontalGroup(
            panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDivisasLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDivisasLayout.createSequentialGroup()
                        .addComponent(divisasL)
                        .addGap(18, 18, 18)
                        .addComponent(divisas, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDivisasLayout.createSequentialGroup()
                        .addGroup(panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuentaL)
                            .addComponent(nameDivL))
                        .addGap(18, 18, 18)
                        .addGroup(panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCuentaDivisas)
                            .addComponent(nameDivTF))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        panelDivisasLayout.setVerticalGroup(
            panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDivisasLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(divisasL)
                    .addComponent(divisas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuentaL)
                    .addComponent(idCuentaDivisas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDivisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameDivL)
                    .addComponent(nameDivTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        clienteApellidosL.setText("Apellidos:");

        clienteNomL.setText("Nombre:");

        clienteIDL.setText("Numero de Identidad:");

        clienteSexoL.setText("Sexo:");

        sexoComboBox.setMaximumRowCount(2);
        sexoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));

        javax.swing.GroupLayout addingClientePLayout = new javax.swing.GroupLayout(addingClienteP);
        addingClienteP.setLayout(addingClientePLayout);
        addingClientePLayout.setHorizontalGroup(
            addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addingClientePLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addingClientePLayout.createSequentialGroup()
                        .addComponent(clienteNomL, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clienteNomTF, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addingClientePLayout.createSequentialGroup()
                        .addComponent(clienteApellidosL, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clienteApellidosTF))
                    .addGroup(addingClientePLayout.createSequentialGroup()
                        .addGroup(addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(addingClientePLayout.createSequentialGroup()
                                .addComponent(clienteSexoL, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexoComboBox, 0, 0, Short.MAX_VALUE))
                            .addComponent(clienteIDL))
                        .addGap(18, 18, 18)
                        .addComponent(clienteIDTF)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        addingClientePLayout.setVerticalGroup(
            addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addingClientePLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteNomL)
                    .addComponent(clienteNomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteApellidosL)
                    .addComponent(clienteApellidosTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteIDL)
                    .addComponent(clienteIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClientePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clienteSexoL)
                    .addComponent(sexoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        dineroDepL.setText("Deposito:");

        idCuentaDepL.setText("ID de Cuenta:");

        nameL.setText("Nombre:");

        javax.swing.GroupLayout depositoPanelLayout = new javax.swing.GroupLayout(depositoPanel);
        depositoPanel.setLayout(depositoPanelLayout);
        depositoPanelLayout.setHorizontalGroup(
            depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositoPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idCuentaDepL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dineroDepL, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dineroDeposito, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(idCuentaDep, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(nameTF))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        depositoPanelLayout.setVerticalGroup(
            depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositoPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dineroDepL)
                    .addComponent(dineroDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idCuentaDepL)
                    .addComponent(idCuentaDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(depositoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameL)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        addingClienteEP.setPreferredSize(new java.awt.Dimension(300, 309));

        clienteApellidosL1.setText("Apellidos:");

        clienteNomL1.setText("Nombre:");

        clienteIDL1.setText("Numero de Identidad:");

        clienteSexoL1.setText("Sexo:");

        sexoComboBoxE.setMaximumRowCount(2);
        sexoComboBoxE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));

        nacL.setText("Nacionalidad:");

        direccionACEL.setText("Direccion:");

        javax.swing.GroupLayout addingClienteEPLayout = new javax.swing.GroupLayout(addingClienteEP);
        addingClienteEP.setLayout(addingClienteEPLayout);
        addingClienteEPLayout.setHorizontalGroup(
            addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addingClienteEPLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addingClienteEPLayout.createSequentialGroup()
                            .addComponent(direccionACEL)
                            .addGap(41, 41, 41)
                            .addComponent(direccionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(addingClienteEPLayout.createSequentialGroup()
                            .addComponent(nacL)
                            .addGap(171, 171, 171)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(nacionalidadTF, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addingClienteEPLayout.createSequentialGroup()
                                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(addingClienteEPLayout.createSequentialGroup()
                                        .addComponent(clienteSexoL1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sexoComboBoxE, 0, 0, Short.MAX_VALUE))
                                    .addComponent(clienteIDL1))
                                .addGap(18, 18, 18)
                                .addComponent(clienteIDETF))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addingClienteEPLayout.createSequentialGroup()
                                .addComponent(clienteApellidosL1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clienteApellidosETF))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addingClienteEPLayout.createSequentialGroup()
                                .addComponent(clienteNomL1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clienteNomETF, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        addingClienteEPLayout.setVerticalGroup(
            addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addingClienteEPLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteNomL1)
                    .addComponent(clienteNomETF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteApellidosL1)
                    .addComponent(clienteApellidosETF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteIDL1)
                    .addComponent(clienteIDETF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clienteSexoL1)
                    .addComponent(sexoComboBoxE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nacL)
                    .addComponent(nacionalidadTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addingClienteEPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionACEL)
                    .addComponent(direccionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        divisasL1.setText("Cantidad de Divisas:");

        cuentaL1.setText("ID de Cuenta:");

        nameDivL1.setText("ID de Cliente:");

        javax.swing.GroupLayout panelDivisasRLayout = new javax.swing.GroupLayout(panelDivisasR);
        panelDivisasR.setLayout(panelDivisasRLayout);
        panelDivisasRLayout.setHorizontalGroup(
            panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDivisasRLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDivisasRLayout.createSequentialGroup()
                        .addComponent(divisasL1)
                        .addGap(18, 18, 18)
                        .addComponent(divisasR, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDivisasRLayout.createSequentialGroup()
                        .addGroup(panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuentaL1)
                            .addComponent(nameDivL1))
                        .addGap(18, 18, 18)
                        .addGroup(panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCuentaDivisasR)
                            .addComponent(nameDivTFR))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        panelDivisasRLayout.setVerticalGroup(
            panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDivisasRLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(divisasL1)
                    .addComponent(divisasR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuentaL1)
                    .addComponent(idCuentaDivisasR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDivisasRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameDivL1)
                    .addComponent(nameDivTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Banco");
        setBackground(new java.awt.Color(153, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(700, 450));
        setResizable(false);
        setSize(new java.awt.Dimension(720, 500));

        bg.setBackground(new java.awt.Color(153, 153, 153));
        bg.setMinimumSize(new java.awt.Dimension(720, 500));
        bg.setPreferredSize(new java.awt.Dimension(720, 500));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menu.setBackground(new java.awt.Color(248, 51, 51));
        menu.setMinimumSize(new java.awt.Dimension(700, 100));
        menu.setPreferredSize(new java.awt.Dimension(700, 100));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoBancoE.jpg"))); // NOI18N

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 235, Short.MAX_VALUE))
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bg.add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 100));

        title.setBackground(new java.awt.Color(204, 204, 204));
        title.setPreferredSize(new java.awt.Dimension(680, 300));

        mostrarCuentas.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        mostrarCuentas.setText("Mostrar Cuentas");
        mostrarCuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarCuentasActionPerformed(evt);
            }
        });

        mostrarSol.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        mostrarSol.setText("Mostrar Sols.");
        mostrarSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarSolActionPerformed(evt);
            }
        });

        atenderSol.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        atenderSol.setText("Atender Sols.");
        atenderSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atenderSolActionPerformed(evt);
            }
        });

        bajaMillos.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        bajaMillos.setText("Baja Millonarios");
        bajaMillos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajaMillosActionPerformed(evt);
            }
        });

        addCuenta.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        addCuenta.setText("Añadir Cuenta");
        addCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCuentaActionPerformed(evt);
            }
        });

        borrarCuenta.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        borrarCuenta.setText("Borrar Cuenta");
        borrarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarCuentaActionPerformed(evt);
            }
        });

        retirarBoton.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        retirarBoton.setText("Retirar Dinero");
        retirarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarBotonActionPerformed(evt);
            }
        });

        divisasBoton.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        divisasBoton.setText("Cambio de Divisas");
        divisasBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisasBotonActionPerformed(evt);
            }
        });

        mostrarClientesBoton.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        mostrarClientesBoton.setText("Mostrar Clientes");
        mostrarClientesBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarClientesBotonActionPerformed(evt);
            }
        });

        depositoBoton.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        depositoBoton.setText("Deposito");
        depositoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositoBotonActionPerformed(evt);
            }
        });

        imgL1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clientesBanco.jpg"))); // NOI18N
        imgL1.setText("jLabel1");

        imgL2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/enlistadosBanco.jpg"))); // NOI18N
        imgL2.setText("jLabel1");

        imgL3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/atenderTodoBanco.jpg"))); // NOI18N
        imgL3.setText("jLabel1");

        imgL4.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bajaMillosBanco.jpg"))); // NOI18N
        imgL4.setText("jLabel1");

        imgL5.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/borrarBanco.jpg"))); // NOI18N
        imgL5.setText("jLabel1");

        imgL6.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/añadirCuentaBanco.jpg"))); // NOI18N
        imgL6.setText("jLabel1");

        imgL7.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/retiroBanco.jpg"))); // NOI18N
        imgL7.setText("jLabel1");

        imgL8.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/divisasBanco.jpg"))); // NOI18N
        imgL8.setText("jLabel1");

        imgL9.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cuentasBanco.jpg"))); // NOI18N
        imgL9.setText("jLabel1");

        imgL10.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        imgL10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/depositoBanco.jpg"))); // NOI18N
        imgL10.setText("jLabel1");

        javax.swing.GroupLayout titleLayout = new javax.swing.GroupLayout(title);
        title.setLayout(titleLayout);
        titleLayout.setHorizontalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(titleLayout.createSequentialGroup()
                        .addComponent(mostrarCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mostrarSol, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mostrarClientesBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(atenderSol, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bajaMillos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(titleLayout.createSequentialGroup()
                        .addComponent(addCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(borrarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(retirarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(divisasBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(depositoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(titleLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(titleLayout.createSequentialGroup()
                                .addComponent(imgL9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(imgL2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(imgL1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(imgL3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(imgL4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(titleLayout.createSequentialGroup()
                                .addComponent(imgL6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(imgL5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(imgL7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(imgL8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(imgL10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        titleLayout.setVerticalGroup(
            titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgL1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostrarCuentas)
                    .addComponent(mostrarSol)
                    .addComponent(mostrarClientesBoton)
                    .addComponent(atenderSol)
                    .addComponent(bajaMillos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgL6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgL5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retirarBoton)
                    .addComponent(addCuenta)
                    .addComponent(depositoBoton)
                    .addComponent(divisasBoton)
                    .addComponent(borrarCuenta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bg.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 670, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarCuentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarCuentasActionPerformed
        ListaSE cuentas = banco.getListaDeCuentas();
        if (cuentas.isEmpty()){
            JOptionPane.showMessageDialog(Interfaz.this, "Lista de Cuentas vacía");
        } else {
            JOptionPane.showMessageDialog(Interfaz.this, cuentas.show());
        }
    }//GEN-LAST:event_mostrarCuentasActionPerformed

    private void atenderSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atenderSolActionPerformed
        if (banco.getListaDeSolicitudes().isEmpty()){
            JOptionPane.showMessageDialog(Interfaz.this, "No hay solicitudes en la lista...");
        } else {
            banco.atenderTodo();
            JOptionPane.showMessageDialog(Interfaz.this, "Todas las solicitudes han sido atendidas.");
        }
    }//GEN-LAST:event_atenderSolActionPerformed

    private void bajaMillosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajaMillosActionPerformed
        if (banco.millonarios()){
            banco.adiosMillos();
            JOptionPane.showMessageDialog(Interfaz.this, "Las cuentas milllonarias han sido dadas de baja.");
        } else {
            JOptionPane.showMessageDialog(Interfaz.this, "No existen cuentas millonarias.");
        }
    }//GEN-LAST:event_bajaMillosActionPerformed

    private void mostrarSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarSolActionPerformed
        ListaSE solicitudes = banco.getListaDeSolicitudes();
        if (solicitudes.isEmpty()){
            JOptionPane.showMessageDialog(Interfaz.this, "La lista de solicitudes esta vacía");
        } else {
            JOptionPane.showMessageDialog(Interfaz.this, solicitudes.show());
        }
    }//GEN-LAST:event_mostrarSolActionPerformed

    private void borrarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarCuentaActionPerformed
        try {
            int id = Integer.parseInt(javax.swing.JOptionPane.showInputDialog("Escribe el id de la cuenta:"));
            banco.otroBorrar(id);
            JOptionPane.showMessageDialog(Interfaz.this, "Cuenta #"+id+" eliminada.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
        }
    }//GEN-LAST:event_borrarCuentaActionPerformed

    private void addCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCuentaActionPerformed
        int id;
        int idCuenta;
        String[] opciones = new String[2];
        opciones[0] = "Si";
        opciones[1] = "No";
        int isCliente = JOptionPane.showConfirmDialog(null, "¿Es usted cliente del banco?", "Conteste la pregunta", JOptionPane.YES_NO_CANCEL_OPTION);
        if (isCliente == JOptionPane.NO_OPTION){
            int nac = JOptionPane.showOptionDialog(null, "¿Eres de Nacionalidad Mexicana?", "Comprobación de Nacionalidad",0,2,null,opciones,opciones[0]);
            if (nac == 0){
                int res = JOptionPane.showConfirmDialog(null, addingClienteP, "Proporcione la información que se le solicita", JOptionPane.OK_CANCEL_OPTION);
                if (res == JOptionPane.OK_OPTION){
                    try {
                        String nombreCliente = clienteNomTF.getText();
                        String apellidosCliente = clienteApellidosTF.getText();
                        int clienteID = Integer.parseInt(clienteIDTF.getText());
                        char sexoCliente = 0;
                        switch (sexoComboBox.getSelectedItem().toString()) {
                            case "Masculino":
                                sexoCliente = 'M';
                                break;
                            case "Femenino":
                                sexoCliente = 'F';
                                break;
                            default:
                                break;
                        }
                        Nacional cliente = new Nacional(nombreCliente, apellidosCliente, clienteID, sexoCliente);
                        idCuenta = (int) Math.floor(Math.random()*10000);
                        while (true){
                            if (banco.buscarCuenta(idCuenta) == -1){
                                break;
                            }
                            id = (int) Math.floor(Math.random()*10000);
                        }
                        banco.otroAñadir(idCuenta, cliente);
                        JOptionPane.showMessageDialog(Interfaz.this, "¡Cuenta Creada y Añadida a la Lista!");
                    } catch(Exception e){
                        JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
                    }
                }
            } else if(nac == 1){
                int res = JOptionPane.showConfirmDialog(null, addingClienteEP, "Proporcione la información que se le solicita", JOptionPane.OK_CANCEL_OPTION);
                if (res == JOptionPane.OK_OPTION){
                    try {
                        String nombreCliente = clienteNomETF.getText();
                        String apellidosCliente = clienteApellidosETF.getText();
                        int clienteID = Integer.parseInt(clienteIDETF.getText());
                        char sexoCliente = 0;
                        switch (sexoComboBoxE.getSelectedItem().toString()) {
                            case "Masculino":
                                sexoCliente = 'M';
                                break;
                            case "Femenino":
                                sexoCliente = 'F';
                                break;
                            default:
                                break;
                        }
                        String nacionalidadCliente = nacionalidadTF.getText();
                        String direccionCliente = direccionTF.getText();
                        Extranjero cliente = new Extranjero(nombreCliente, apellidosCliente, clienteID, sexoCliente, nacionalidadCliente, direccionCliente);
                        idCuenta = (int) Math.floor(Math.random()*10000);
                        while (true){
                            if (banco.buscarCuenta(idCuenta) == -1){
                                break;
                            }
                            id = (int) Math.floor(Math.random()*10000);
                        }
                        banco.otroAñadir(idCuenta, cliente);
                        JOptionPane.showMessageDialog(Interfaz.this, "¡Cuenta Creada y Añadida a la Lista!");
                    } catch (Exception e){
                        JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
                    }
                }
            }
        } else if (isCliente == JOptionPane.YES_OPTION){
            try{
                id = Integer.parseInt(JOptionPane.showInputDialog("Ingresa tu numero de identidad:"));
                Cliente cliente = banco.buscarClientePorId(id);
                if (cliente == null){
                    JOptionPane.showMessageDialog(Interfaz.this, "No se encontró en la lista de clientes :(");
                } else {
                    idCuenta = (int) Math.floor(Math.random()*10000);
                        while (true){
                            if (banco.buscarCuenta(idCuenta) == -1){
                                break;
                            }
                            id = (int) Math.floor(Math.random()*10000);
                        }
                    banco.otroAñadir(idCuenta, cliente);
                    JOptionPane.showMessageDialog(Interfaz.this, "¡Cuenta Creada y Añadida a la Lista!");
                }
            } catch (Exception e){
                JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
            }
        }
    }//GEN-LAST:event_addCuentaActionPerformed

    private void retirarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarBotonActionPerformed
        String[] opciones = new String[2];
        opciones[0] = "Si";
        opciones[1] = "No";
        int nac = JOptionPane.showOptionDialog(null, "¿Eres de Nacionalidad Mexicana?", "Comprobación de Nacionalidad",0,2,null,opciones,opciones[0]);
        if (nac == 0){
            try {
                int result = JOptionPane.showConfirmDialog(null, panelRetiroN, "Por favor proporcione la información solicitada:", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION){
                    double dinero = Double.parseDouble(retiro.getText());
                    int id = Integer.parseInt(idCuenta.getText());
                    int posCuenta = banco.buscarCuenta(id);
                    int idClienteNac = Integer.parseInt(idCliente.getText());
                    if (posCuenta == -1){
                        JOptionPane.showMessageDialog(Interfaz.this, "Cuenta no encontrada :[");
                    } else {
                        Cuenta cuenta = (Cuenta) banco.getListaDeCuentas().get(posCuenta);
                        System.out.println(cuenta.toString());
                        Retiro retiro = new Retiro(idClienteNac, id, dinero, cuenta.getCliente().getNomCom());
                        if (banco.comprobarSolicitud(retiro) == false){
                            JOptionPane.showMessageDialog(Interfaz.this, "No hay suficiente saldo en su cuenta o hay otras transacciones en la lista de espera que la dejan con saldo insuficiente.");
                        } else if (idClienteNac == cuenta.getCliente().getIdCliente()){
                            banco.getListaDeSolicitudes().add(new NodoSE(retiro, null));
                            JOptionPane.showMessageDialog(Interfaz.this, "¡Solicitud de Retiro añadida a la Lista!");
                        } else {
                            JOptionPane.showMessageDialog(Interfaz.this, "Su numero de identidad no coincide con el asociado a su cuenta :/");
                        }
                    }
                }
            } catch (Exception e){
                JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
            }
        }
        else if (nac == 1){
            try {
                int result = JOptionPane.showConfirmDialog(null, panelRetiroE, "Por favor proporcione la información solicitada:", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION){
                    double dinero = Double.parseDouble(retiroE.getText());
                    int id = Integer.parseInt(idCuentaE.getText());
                    int posCuenta = banco.buscarCuenta(id);
                    int idClienteEx = Integer.parseInt(idClienteE.getText());
                    if (posCuenta == -1){
                        JOptionPane.showMessageDialog(Interfaz.this, "Cuenta no encontrada :[");
                    } else {
                        Cuenta cuenta = (Cuenta) banco.getListaDeCuentas().get(posCuenta);
                        Retiro retiro = new Retiro(idClienteEx, id, dinero, cuenta.getCliente().getNomCom());
                        if (banco.comprobarSolicitud(retiro) == false){
                            JOptionPane.showMessageDialog(Interfaz.this, "No hay suficiente saldo en su cuenta o hay otras transacciones en la lista de espera que la dejan con saldo insuficiente.");
                        }else if (idClienteEx == cuenta.getCliente().getIdCliente()){
                            banco.getListaDeSolicitudes().add(new NodoSE(retiro, null));
                            JOptionPane.showMessageDialog(Interfaz.this, "¡Solicitud de Retiro añadida a la Lista!");
                        } else {
                            JOptionPane.showMessageDialog(Interfaz.this, "Su numero de identidad no coincide con el asociado a su cuenta :/");
                        }
                    }   
                }
            } catch (Exception e){
                JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
            }
        }
    }//GEN-LAST:event_retirarBotonActionPerformed

    private void divisasBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisasBotonActionPerformed
        String[] opciones = new String[2];
        opciones[0] = "Depositar";
        opciones[1] = "Obtener";
        double cantDivisas;
        int id;
        int posCuenta;
        double saldo;
        int option = JOptionPane.showOptionDialog(null, "¿Qué operación deseas realizar?", "Operacion de Divisas",0,2,null,opciones,opciones[0]);
        try {
            if (option == 0){
                int result = JOptionPane.showConfirmDialog(null, panelDivisas, "Por favor proporcione la información solicitada:", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION){
                    cantDivisas = Double.parseDouble(divisas.getText());
                    cantDivisas = cantDivisas*20;
                    id = Integer.parseInt(idCuentaDivisas.getText());
                    String name = nameDivTF.getText();
                    posCuenta = banco.buscarCuenta(id);
                    if (posCuenta == -1){
                        JOptionPane.showMessageDialog(Interfaz.this, "Cuenta no encontrada :[");
                    } else {
                        Cuenta cuenta = (Cuenta) banco.getListaDeCuentas().get(posCuenta);
                        Deposito divisaDeposito = new Deposito(cuenta.getCliente().getIdCliente(), id, cantDivisas, name);
                        banco.getListaDeSolicitudes().add(new NodoSE(divisaDeposito, null));
                        JOptionPane.showMessageDialog(Interfaz.this, "¡Solicitud añadida a la lista!");
                    } 
                }
            } else if (option == 1){
                int result = JOptionPane.showConfirmDialog(null, panelDivisasR, "Por favor proporcione la información solicitada:", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION){
                    cantDivisas = Double.parseDouble(divisasR.getText());
                    cantDivisas = cantDivisas*20;
                    id = Integer.parseInt(idCuentaDivisasR.getText());
                    int idCl = Integer.parseInt(nameDivTFR.getText());
                    posCuenta = banco.buscarCuenta(id);
                    if (posCuenta == -1){
                        JOptionPane.showMessageDialog(Interfaz.this, "Cuenta no encontrada :[");
                    } else {
                        Cuenta cuenta = (Cuenta) banco.getListaDeCuentas().get(posCuenta);
                        Retiro divisaRetiro = new Retiro(idCl, id, cantDivisas, cuenta.getCliente().getNomCom());
                        if (banco.comprobarSolicitud(divisaRetiro) == false){
                            JOptionPane.showMessageDialog(Interfaz.this, "Su cuenta tiene saldo insuficienta para realizar la transaccion o hay otras transacciones en la lista de espera que la dejan con saldo insuficiente.");
                        } else if(cuenta.getCliente().getIdCliente() != idCl){
                            JOptionPane.showMessageDialog(Interfaz.this, "Su numero de identidad no coincide con el asociado a la Cuenta.");
                        } 
                        else {
                            banco.getListaDeSolicitudes().add(new NodoSE(divisaRetiro, null));
                            JOptionPane.showMessageDialog(Interfaz.this, "¡Solicitud añadida a la lista!");
                        }
                    } 
                }
            }
        } catch (Exception e){
                JOptionPane.showMessageDialog(Interfaz.this, e.getMessage());
        }
    }//GEN-LAST:event_divisasBotonActionPerformed

    private void mostrarClientesBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarClientesBotonActionPerformed
        ListaSE clientes = banco.getListaDeClientes();
        if (clientes.isEmpty()){
            JOptionPane.showMessageDialog(Interfaz.this, "No tenemos clientes :'(");
        } else {
            JOptionPane.showMessageDialog(Interfaz.this, banco.getListaDeClientes().show());
        }
    }//GEN-LAST:event_mostrarClientesBotonActionPerformed

    private void depositoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositoBotonActionPerformed
        int res = JOptionPane.showConfirmDialog(null, depositoPanel, "Ingresa los datos correspondientes", JOptionPane.OK_CANCEL_OPTION);
        try {
            if (res == JOptionPane.OK_OPTION){
                int idCuentaD = Integer.parseInt(idCuentaDep.getText());
                double dinero = Double.parseDouble(dineroDeposito.getText());
                String name = nameTF.getText();
                int cuentaPos = banco.buscarCuenta(idCuentaD);
                if (cuentaPos == -1){
                    JOptionPane.showMessageDialog(Interfaz.this, "Cuenta no encontrada...");
                } else {
                    Cuenta cuentaDep = (Cuenta) banco.getListaDeCuentas().get(cuentaPos);
                    Deposito deposito = new Deposito(cuentaDep.getCliente().getIdCliente(), idCuentaD, dinero, name);
                    banco.getListaDeSolicitudes().add(new NodoSE(deposito, null));
                    JOptionPane.showMessageDialog(Interfaz.this, "¡Solicitud de Deposito Añadida a la Lista!");
                }
            } 
        } catch (Exception e){
            JOptionPane.showMessageDialog(Interfaz.this, "ERROR:"+e.getMessage());
        }
    }//GEN-LAST:event_depositoBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        ListaSE cuentas = new ListaSE<Cuenta>(null);
        ListaSE solicitudes = new ListaSE<Solicitud>(null);
        ListaSE clientes =  new ListaSE<Cliente>(null);
        Cliente cliente1 = new Cliente("Juan", "Brambila Suarez",1001,'M');
        Cliente cliente2 = new Cliente("Yara Mariana", "Gonzales Chiapa",1002,'F');
        NodoSE<Cliente> nodoCl1 = new NodoSE(cliente1, null);
        NodoSE<Cliente> nodoCl2 = new NodoSE(cliente2, null);
        clientes.add(nodoCl1);
        clientes.add(nodoCl2);
        for (int i = 0; i < 6; i++){
            if (i < 3){
                Cuenta cuenta = new Cuenta(i+1, Math.random()*1000000, i, cliente1);
                NodoSE<Cuenta> nodoC = new NodoSE(cuenta, null);
                cuentas.add(nodoC);
                Deposito sol = new Deposito(cliente1.getIdCliente(), i+1, Math.random()*200000, "Anonimo");
                NodoSE<Solicitud> nodoS = new NodoSE(sol, null);
                solicitudes.add(nodoS);
            } else {
                Cuenta cuenta = new Cuenta(i+1, Math.random()*1000000, i, cliente2);
                NodoSE<Cuenta> nodoC = new NodoSE(cuenta, null);
                cuentas.add(nodoC);
                Retiro sol = new Retiro(cliente2.getIdCliente(), i+1, Math.random()*20000, "Anonimo");
                NodoSE<Solicitud> nodoS = new NodoSE(sol, null);
                solicitudes.add(nodoS);
            }
            
        }
        Banco banco = new Banco(cuentas, solicitudes, clientes);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Interfaz(banco).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCuenta;
    private javax.swing.JPanel addingClienteEP;
    private javax.swing.JPanel addingClienteP;
    private javax.swing.JTextField apellidos;
    private javax.swing.JTextField apellidosE;
    private javax.swing.JLabel apellidosL;
    private javax.swing.JLabel apellidosL1;
    private javax.swing.JButton atenderSol;
    private javax.swing.JButton bajaMillos;
    private javax.swing.JPanel bg;
    private javax.swing.JButton borrarCuenta;
    private javax.swing.JTextField clienteApellidosETF;
    private javax.swing.JLabel clienteApellidosL;
    private javax.swing.JLabel clienteApellidosL1;
    private javax.swing.JTextField clienteApellidosTF;
    private javax.swing.JTextField clienteIDETF;
    private javax.swing.JLabel clienteIDL;
    private javax.swing.JLabel clienteIDL1;
    private javax.swing.JTextField clienteIDTF;
    private javax.swing.JTextField clienteNomETF;
    private javax.swing.JLabel clienteNomL;
    private javax.swing.JLabel clienteNomL1;
    private javax.swing.JTextField clienteNomTF;
    private javax.swing.JLabel clienteSexoL;
    private javax.swing.JLabel clienteSexoL1;
    private javax.swing.JLabel cuentaL;
    private javax.swing.JLabel cuentaL1;
    private javax.swing.JButton depositoBoton;
    private javax.swing.JPanel depositoPanel;
    private javax.swing.JLabel dineroDepL;
    private javax.swing.JTextField dineroDeposito;
    private javax.swing.JTextField direccion;
    private javax.swing.JLabel direccionACEL;
    private javax.swing.JLabel direccionL;
    private javax.swing.JTextField direccionTF;
    private javax.swing.JTextField divisas;
    private javax.swing.JButton divisasBoton;
    private javax.swing.JLabel divisasL;
    private javax.swing.JLabel divisasL1;
    private javax.swing.JTextField divisasR;
    private javax.swing.JTextField idCliente;
    private javax.swing.JTextField idClienteE;
    private javax.swing.JTextField idCuenta;
    private javax.swing.JTextField idCuentaDep;
    private javax.swing.JLabel idCuentaDepL;
    private javax.swing.JTextField idCuentaDivisas;
    private javax.swing.JTextField idCuentaDivisasR;
    private javax.swing.JTextField idCuentaE;
    private javax.swing.JLabel idCuentaL;
    private javax.swing.JLabel idCuentaL1;
    private javax.swing.JLabel idL;
    private javax.swing.JLabel idL1;
    private javax.swing.JLabel imgL1;
    private javax.swing.JLabel imgL10;
    private javax.swing.JLabel imgL2;
    private javax.swing.JLabel imgL3;
    private javax.swing.JLabel imgL4;
    private javax.swing.JLabel imgL5;
    private javax.swing.JLabel imgL6;
    private javax.swing.JLabel imgL7;
    private javax.swing.JLabel imgL8;
    private javax.swing.JLabel imgL9;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel menu;
    private javax.swing.JButton mostrarClientesBoton;
    private javax.swing.JButton mostrarCuentas;
    private javax.swing.JButton mostrarSol;
    private javax.swing.JLabel nacL;
    private javax.swing.JTextField nacionalidad;
    private javax.swing.JLabel nacionalidadL;
    private javax.swing.JTextField nacionalidadTF;
    private javax.swing.JLabel nameDivL;
    private javax.swing.JLabel nameDivL1;
    private javax.swing.JTextField nameDivTF;
    private javax.swing.JTextField nameDivTFR;
    private javax.swing.JLabel nameL;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField nombreE;
    private javax.swing.JLabel nombreL;
    private javax.swing.JLabel nombreL1;
    private javax.swing.JPanel panelDivisas;
    private javax.swing.JPanel panelDivisasR;
    private javax.swing.JPanel panelRetiroE;
    private javax.swing.JPanel panelRetiroN;
    private javax.swing.JButton retirarBoton;
    private javax.swing.JTextField retiro;
    private javax.swing.JTextField retiroE;
    private javax.swing.JLabel retiroL;
    private javax.swing.JLabel retiroL1;
    private javax.swing.JTextField sexo;
    private javax.swing.JComboBox<String> sexoComboBox;
    private javax.swing.JComboBox<String> sexoComboBoxE;
    private javax.swing.JTextField sexoE;
    private javax.swing.JLabel sexoL;
    private javax.swing.JLabel sexoL1;
    private javax.swing.JPanel title;
    // End of variables declaration//GEN-END:variables
}
