/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.basesdedatos;

import java.util.HashSet;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

/**
 *
 * @author Keloc
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz(String list) {
        initComponents();
        listaPersonasTA.setText(list);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addPersonPanel = new javax.swing.JPanel();
        nombreL = new javax.swing.JLabel();
        edadL = new javax.swing.JLabel();
        nombreTF = new javax.swing.JTextField();
        edadTF = new javax.swing.JTextField();
        getIdP = new javax.swing.JPanel();
        idL = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        addPersonBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPersonasTA = new javax.swing.JTextArea();
        delPersonBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        personasL = new javax.swing.JLabel();

        nombreL.setText("Nombre:");

        edadL.setText("Edad:");

        javax.swing.GroupLayout addPersonPanelLayout = new javax.swing.GroupLayout(addPersonPanel);
        addPersonPanel.setLayout(addPersonPanelLayout);
        addPersonPanelLayout.setHorizontalGroup(
            addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPersonPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreL)
                    .addComponent(edadL))
                .addGap(40, 40, 40)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nombreTF)
                    .addComponent(edadTF, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        addPersonPanelLayout.setVerticalGroup(
            addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPersonPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreL)
                    .addComponent(nombreTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPersonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edadL)
                    .addComponent(edadTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        idL.setText("ID:");

        javax.swing.GroupLayout getIdPLayout = new javax.swing.GroupLayout(getIdP);
        getIdP.setLayout(getIdPLayout);
        getIdPLayout.setHorizontalGroup(
            getIdPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(getIdPLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(idL)
                .addGap(18, 18, 18)
                .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        getIdPLayout.setVerticalGroup(
            getIdPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, getIdPLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(getIdPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idL)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addPersonBtn.setText("AÃ±adir");
        addPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPersonBtnActionPerformed(evt);
            }
        });

        listaPersonasTA.setEditable(false);
        listaPersonasTA.setColumns(20);
        listaPersonasTA.setRows(5);
        jScrollPane1.setViewportView(listaPersonasTA);

        delPersonBtn.setText("Borrar");
        delPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPersonBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Actualizar");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        personasL.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        personasL.setText("Personas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personasL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(personasL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPersonBtn)
                    .addComponent(delPersonBtn)
                    .addComponent(updateBtn))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPersonBtnActionPerformed
        int res = JOptionPane.showConfirmDialog(null, addPersonPanel, "Ingresa los datos solicitados", JOptionPane.OK_CANCEL_OPTION);
        if (res == JOptionPane.OK_OPTION){
            try {
                String nombre = nombreTF.getText();
                int edad = Integer.parseInt(edadTF.getText());
                Persona persona = new Persona(nombre, edad);
                SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
                Session session = sessionFactory.openSession();
                session.beginTransaction();
                session.save(persona);
                session.getTransaction().commit();
                session.close();
                updateText();
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_addPersonBtnActionPerformed

    private void delPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPersonBtnActionPerformed
       int res = JOptionPane.showConfirmDialog(null, getIdP, "Ingrese el Id de la Persona", JOptionPane.OK_CANCEL_OPTION);
       if (res == JOptionPane.OK_OPTION){
           try {
               int id = Integer.parseInt(idTF.getText());
               SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
               Session session = sessionFactory.openSession();
               session.beginTransaction();
               Persona persona = session.get(Persona.class, id);
               session.delete(persona);
               session.getTransaction().commit();
               session.close();
               updateText();
           } catch (Exception e){
               JOptionPane.showMessageDialog(null, e.getMessage());
           }
       }
    }//GEN-LAST:event_delPersonBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int res = JOptionPane.showConfirmDialog(null, getIdP, "Ingrese el Id de la Persona", JOptionPane.OK_CANCEL_OPTION);
        if (res == JOptionPane.OK_OPTION){
            int ans = JOptionPane.showConfirmDialog(null, addPersonPanel, "Ingresa los cambios deseados", JOptionPane.OK_CANCEL_OPTION);
            if (ans == JOptionPane.OK_OPTION){
                try {
                    int id = Integer.parseInt(idTF.getText());
                    String nombre = nombreTF.getText();
                    int edad = Integer.parseInt(edadTF.getText());
                    SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
                    Session session = sessionFactory.openSession();
                    session.beginTransaction();
                    Persona persona = session.get(Persona.class, id);
                    persona.setNombre(nombre);
                    persona.setEdad(edad);
                    session.flush();
                    session.getTransaction().commit();
                    session.close();
                    updateText();
                } catch (Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void updateText(){
        try {
            String lista = "";
            SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
            Session session = sessionFactory.openSession();
            session.beginTransaction();
            List<Persona> personas = session.createQuery("FROM Persona", Persona.class).list();
            for (Persona person : personas){
                lista = lista.concat(person.toString()+"\n");
            }
            listaPersonasTA.setText(lista);
            session.getTransaction().commit();
            session.close();
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
     /*
        java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Interfaz(lista).setVisible(true);
                }
            }); 
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPersonBtn;
    private javax.swing.JPanel addPersonPanel;
    private javax.swing.JButton delPersonBtn;
    private javax.swing.JLabel edadL;
    private javax.swing.JTextField edadTF;
    private javax.swing.JPanel getIdP;
    private javax.swing.JLabel idL;
    private javax.swing.JTextField idTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea listaPersonasTA;
    private javax.swing.JLabel nombreL;
    private javax.swing.JTextField nombreTF;
    private javax.swing.JLabel personasL;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
